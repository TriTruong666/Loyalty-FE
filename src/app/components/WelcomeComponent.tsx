"use client";
import { ReactNode, useEffect, useRef, useState } from "react";
import Dock from "./Dock";
import {
  IoBookOutline,
  IoDiamondOutline,
  IoExitOutline,
  IoInformationCircleOutline,
  IoShieldCheckmark,
  IoSparklesSharp,
} from "react-icons/io5";
import RotatingText from "./RotatingText";
import { AnimatePresence, motion } from "framer-motion";
import GlitchText from "./GlitchText";
import ShinyText from "./ShinyText";
import CountUp from "./CountUp";
import FlowingMenu from "./FlowingMenu";
import {
  FaArrowDown,
  FaCalculator,
  FaHeart,
  FaRegCreditCard,
} from "react-icons/fa";
import SpotlightCard from "./SpotlightCard";
import { FaRankingStar } from "react-icons/fa6";
import { IoIosGift } from "react-icons/io";
import { TbRobotFace } from "react-icons/tb";
import Image from "next/image";
import Squares from "./Squares";
import { useCountAllCustomer } from "../hooks/hook";

interface FeaturedCardProps {
  id?: number;
  icon: ReactNode;
  title: string;
  content: string;
  color?: string;
}

export default function WelcomeComponent() {
  const { data: count, isLoading } = useCountAllCustomer();
  const [visibleSection, setVisibleSection] = useState(0);
  const [showModal, setShowModal] = useState<boolean | null>(true);
  const totalCustomer =
    Number(count?.independentCustomer) + Number(count?.saleCustomer);
  useEffect(() => {
    if (typeof window !== "undefined") {
      const hasSeenModal = localStorage.getItem("hasSeenWelcomeModal");
      if (!hasSeenModal) {
        localStorage.setItem("hasSeenWelcomeModal", "true");
        setShowModal(true);
      } else {
        setShowModal(false);
      }
    }
  }, []);

  const items = [
    {
      icon: <IoInformationCircleOutline size={18} />,
      label: "Gi·ªõi thi·ªáu",
      onClick: () => {
        const section = document.getElementById("1");
        if (section) {
          section.scrollIntoView({ behavior: "smooth" });
        }
      },
    },
    {
      icon: <IoBookOutline size={18} />,
      label: "H∆∞·ªõng d·∫´n",
      onClick: () => {
        const section = document.getElementById("7");
        if (section) {
          section.scrollIntoView({ behavior: "smooth" });
        }
      },
    },
    {
      icon: <IoDiamondOutline size={18} />,
      label: "Loyalty",
      onClick: () => {
        const section = document.getElementById("17");
        if (section) {
          section.scrollIntoView({ behavior: "smooth" });
        }
      },
    },
    {
      icon: <IoExitOutline size={18} />,
      label: "Tr·ªü v·ªÅ",
      onClick: () => {
        const section = document.getElementById("21");
        if (section) {
          section.scrollIntoView({ behavior: "smooth" });
        }
      },
    },
  ];
  const featuredItems: FeaturedCardProps[] = [
    {
      id: 1,
      title: "T√≠ch ƒëi·ªÉm t·ª± ƒë·ªông",
      content:
        "B·∫°n s·∫Ω lu√¥n nh·∫≠n ƒë∆∞·ª£c ƒëi·ªÉm th∆∞·ªüng khi mua h√†ng - mua nhi·ªÅu th√¨ t√≠ch ƒëi·ªÉm cao ƒë√≥ nha ü§£",
      icon: <FaCalculator className="text-[28px]" />,
      color: "rgba(255, 99, 132, 0.3)",
    },
    {
      id: 2,
      title: "∆Øu ƒë√£i & Qu√† t·∫∑ng?",
      content:
        "T√≠ch ƒëi·ªÉm cao ƒë·ªÉ l·∫•y chi·∫øt kh·∫•u th√¥i ∆∞? Kh√¥ng, t·ª•i tui c√≤n t·∫∑ng qu√† cho b·∫°n n·ªØa √° üíñ",
      icon: <IoIosGift className="text-[28px]" />,
      color: "rgba(54, 162, 235, 0.3)",
    },
    {
      id: 3,
      title: "H·ªá th·ªëng ph√¢n h·∫°ng",
      content:
        "ƒêi·ªÉm c√†ng cao th√¨ b·∫°n s·∫Ω ƒë∆∞·ª£c thƒÉng h·∫°ng, h·∫°ng c√†ng cao th√¨ ƒë∆∞·ª£c `ƒêUA TOP` lu√¥n üòú",
      icon: <FaRankingStar className="text-[28px]" />,
      color: "rgba(255, 206, 86, 0.3)",
    },
    {
      id: 7,
      title: "Loyalty Chatbot",
      content:
        "H·ªá th·ªëng c√≥ Chatbot ri√™ng ƒë·ªÉ gi√∫p kh√°ch h√†ng t√¨m ki·∫øm th√¥ng tin nhanh ch√≥ng, gi√∫p b·∫°n ti·∫øt ki·ªám ‚è±Ô∏è",
      icon: <TbRobotFace className="text-[28px]" />,
      color: "rgba(0, 229, 255, 0.3)",
    },
    {
      id: 8,
      title: "Thanh to√°n d·ªÖ d√†ng",
      content:
        "H·ªá th·ªëng thanh to√°n ƒëa d·∫°ng, b·∫°n c√≥ th·ªÉ mua h√†ng m√† `TR·∫¢ SAU` c≈©ng ƒë∆∞·ª£c ü´®",
      icon: <FaRegCreditCard className="text-[28px]" />,
      color: "rgba(255, 255, 255, 0.3)",
    },
    {
      id: 5,
      title: "H·ªó tr·ª£ 24/7",
      content:
        "Kh√¥ng ch·ªâ CSKH chƒÉm s√≥c b·∫°n ƒë√¢u, m√† ch√∫ng t√¥i c√≤n c√≥ c·∫£ BOT ƒë·ªÉ h·ªó tr·ª£ b·∫°n lu√¥n ƒë√≥ ü•∞",
      icon: <FaHeart className="text-[28px]" />,
      color: "rgba(153, 102, 255, 0.3)",
    },
    {
      id: 4,
      title: "B·∫£o m·∫≠t n√¢ng cao",
      content:
        "H·ªá th·ªëng c·ªßa Loyalty s·∫µn s√†ng b·∫£o v·ªá b·∫°n tr∆∞·ªõc c√°c cu·ªôc t·∫•n c√¥ng ƒë√°nh c·∫Øp th√¥ng tin üòâ",
      icon: <IoShieldCheckmark className="text-[28px]" />,
      color: "rgba(75, 192, 192, 0.3)",
    },

    {
      id: 6,
      title: "Tr·∫£i nghi·ªám tuy·ªát v·ªùi",
      content:
        "ƒê·ªôi ng≈© Loyalty tƒÉng tr·∫£i nghi·ªám b·∫±ng c√°ch thi·∫øt k·∫ø UI/UX ƒë·ªÉ b·∫°n c·∫£m th·∫•y tho·∫£i m√°i nh·∫•t üòé",
      icon: <IoSparklesSharp className="text-[28px]" />,
      color: "rgba(255, 159, 64, 0.3)",
    },
  ];
  const demoItems = [
    {
      link: "https://easydew.vn/",
      text: "Easydew",
      image: "/brand2.png",
    },
    {
      link: "https://sebamed.com.vn/",
      text: "Sebamed",
      image: "/brand5.png",
    },
    {
      link: "https://drciccarelli.vn/",
      text: "Dr.Ciccarelli",
      image: "/brand-dr-ci.png",
    },
    {
      link: "https://shopduocmypham.com/collections/eclat-du-teint?srsltid=AfmBOorRGOS0oYZdp1SLSdSoo8OX_7s-K90O3bwQ8Oc4BtJQ92qWfqTH",
      text: "Eclat Du Teint",
      image: "/brand3.png",
    },
    {
      link: "https://shopduocmypham.com/collections/pax-moly?srsltid=AfmBOoqnOZSitRF0_xbjbGp8DCFkHjezlRf4e-0PAdxbP5AMWD5qe80n",
      text: "Pax Moly",
      image: "/brand6.png",
    },
  ];
  const sections = [
    {
      id: 1,
      content: (
        <div className="flex items-center justify-center gap-x-[15px] h-screen relative">
          <p className="font-bold text-[50px] cursor-default">PicareVN</p>
          <RotatingText
            texts={[
              "Xin ch√†o",
              "Welcome",
              "ÏïàÎÖïÌïòÏÑ∏Ïöî",
              "„Åì„Çì„Å´„Å°„ÅØ",
              "Bonjour",
              "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ",
              "‰Ω†Â•Ω",
              "–ü—Ä–∏–≤–µ—Ç",
            ]}
            mainClassName="px-2 bg-primary font-bold text-[50px] cursor-default font-poppins text-black overflow-hidden py-1 rounded-lg"
            staggerFrom="last"
            initial={{ y: "100%" }}
            animate={{ y: 0 }}
            exit={{ y: "-120%" }}
            staggerDuration={0.05}
            splitLevelClassName="overflow-hidden pb-1"
            transition={{ type: "spring", damping: 40, stiffness: 400 }}
            rotationInterval={3000}
          />
          <ScrollDown />
        </div>
      ),
    },
    {
      id: 2,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <GlitchText
            speed={1}
            enableShadows={true}
            enableOnHover={true}
            className="text-[40px]"
          >
            1.0Version
          </GlitchText>
        </div>
      ),
    },

    {
      id: 3,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          {visibleSection === 3 && (
            <>
              <CountUp
                from={0}
                to={Number(totalCustomer)}
                separator=","
                direction="up"
                duration={2}
                delay={2}
                className="font-bold text-[70px] bg-gradient-to-b from-yellow-500 via-purple-500 to-orange-500 text-transparent bg-clip-text"
                startWhen={visibleSection === 3 && !isLoading}
                onEnd={() => {
                  const section = document.getElementById("4");
                  if (section) {
                    setTimeout(() => {
                      section.scrollIntoView({ behavior: "smooth" });
                    }, 7000);
                  }
                }}
              />
              <p className="text-[24px] text-normal">
                Kh√°ch h√†ng th√¢n thi·∫øt ƒë√£ tham gia{" "}
                <strong className="text-primary">Loyalty</strong>. C√≥ c·∫£ b·∫°n n·ªØa
                ƒë√≥ ‚ù§Ô∏è
              </p>
            </>
          )}
        </div>
      ),
    },
    {
      id: 4,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <ShinyText
            text="Th∆∞∆°ng hi·ªáu ƒë·ªôc quy·ªÅn PicareVN"
            disabled={false}
            speed={3}
            className="text-[40px]"
          />
          <div className="3xl:h-[660px] 2xl:h-[500px] w-full mt-[30px]">
            <FlowingMenu items={demoItems} />
          </div>
        </div>
      ),
    },
    {
      id: 5,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen px-[80px]">
          <div className="grid grid-cols-4 justify-between w-full gap-[20px]">
            {(featuredItems ?? []).map((item) => (
              <SpotlightCard
                key={item.id}
                className="custom-spotlight-card"
                spotlightColor={item.color as string}
              >
                <div className="flex flex-col gap-y-[20px] font-inter">
                  <div className="">{item.icon}</div>
                  <p className="font-bold text-[22px]">{item.title}</p>
                  <p className="text-sm text-normal">{item.content}</p>
                </div>
              </SpotlightCard>
            ))}
          </div>
        </div>
      ),
    },
    {
      id: 6,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen font-open px-[60px]">
          <motion.p
            initial={{ opacity: 0, scale: 0.8 }} // Start smaller and transparent
            animate={visibleSection === 6 ? { opacity: 1, scale: 1 } : {}} // Animate to visible
            exit={{ opacity: 0, scale: 0.8 }} // Exit animation
            transition={{ duration: 0.5, ease: "easeOut" }} // Transition settings
            className="text-[18px] leading-10"
          >
            <strong className="font-bold text-primary">PicareVN Loyalty</strong>{" "}
            l√† h·ªá th·ªëng chƒÉm s√≥c kh√°ch h√†ng th√¢n thi·∫øt ƒë∆∞·ª£c ph√°t tri·ªÉn nh·∫±m tri
            √¢n v√† g·∫Øn k·∫øt l√¢u d√†i v·ªõi kh√°ch h√†ng ƒë√£ v√† ƒëang tin t∆∞·ªüng s·ª≠ d·ª•ng
            s·∫£n ph·∫©m, d·ªãch v·ª• c·ªßa PicareVN. V·ªõi m·ª•c ti√™u mang ƒë·∫øn nhi·ªÅu l·ª£i √≠ch
            thi·∫øt th·ª±c, h·ªá th·ªëng n√†y cho ph√©p kh√°ch h√†ng mua s·∫£n ph·∫©m v·ªõi m·ª©c
            gi√° ∆∞u ƒë√£i h∆°n, ƒë·ªìng th·ªùi t√≠ch l≈©y ƒëi·ªÉm th∆∞·ªüng th√¥ng qua m·ªói l·∫ßn mua
            s·∫Øm. ƒêi·ªÉm t√≠ch l≈©y c√≥ th·ªÉ ƒë∆∞·ª£c quy ƒë·ªïi th√†nh c√°c m·ª©c gi·∫£m gi√° h·∫•p
            d·∫´n ho·∫∑c c√°c ph·∫ßn qu√† ƒë·ªôc quy·ªÅn, gi√∫p vi·ªác mua s·∫Øm tr·ªü n√™n ti·∫øt ki·ªám
            v√† th√∫ v·ªã h∆°n bao gi·ªù h·∫øt.
          </motion.p>
          <motion.p
            initial={{ opacity: 0, scale: 0.8 }} // Start smaller and transparent
            animate={visibleSection === 6 ? { opacity: 1, scale: 1 } : {}} // Animate to visible
            exit={{ opacity: 0, scale: 0.8 }} // Exit animation
            transition={{ duration: 0.7, ease: "easeOut" }} // Transition settings
            className="text-[18px] leading-10"
          >
            ƒê·∫∑c bi·ªát,{" "}
            <strong className="font-bold text-primary">PicareVN Loyalty</strong>{" "}
            ph√¢n chia kh√°ch h√†ng th√†nh nhi·ªÅu h·∫°ng m·ª©c (rank) kh√°c nhau nh∆∞ Th√†nh
            vi√™n <strong className="text-gray-300">B·∫°c</strong>,{" "}
            <strong className="text-yellow-400">V√†ng</strong>,{" "}
            <strong className="text-blue-400">B·∫°ch Kim</strong>,‚Ä¶ v·ªõi c√°c quy·ªÅn
            l·ª£i tƒÉng d·∫ßn theo t·ª´ng c·∫•p ƒë·ªô. C√†ng mua s·∫Øm nhi·ªÅu, t√≠ch ƒëi·ªÉm cao,
            kh√°ch h√†ng c√†ng nhanh ch√≥ng thƒÉng h·∫°ng v√† ƒë∆∞·ª£c ti·∫øp c·∫≠n v·ªõi c√°c
            ch∆∞∆°ng tr√¨nh ∆∞u ƒë√£i ƒë·∫∑c bi·ªát nh∆∞ khuy·∫øn m√£i ri√™ng, qu√† t·∫∑ng sinh
            nh·∫≠t, quy·ªÅn ƒë·∫∑t h√†ng s·ªõm, hay h·ªó tr·ª£ c√° nh√¢n h√≥a t·ª´ ƒë·ªôi ng≈© chƒÉm s√≥c
            kh√°ch h√†ng.
          </motion.p>
          <motion.p
            initial={{ opacity: 0, scale: 0.8 }} // Start smaller and transparent
            animate={visibleSection === 6 ? { opacity: 1, scale: 1 } : {}} // Animate to visible
            exit={{ opacity: 0, scale: 0.8 }} // Exit animation
            transition={{ duration: 0.9, ease: "easeOut" }} // Transition settings
            className="text-[18px] leading-10"
          >
            Ch√∫ng t√¥i tin r·∫±ng, v·ªõi h·ªá th·ªëng Loyalty n√†y, kh√°ch h√†ng kh√¥ng ch·ªâ
            c·∫£m th·∫•y ƒë∆∞·ª£c tr√¢n tr·ªçng m√† c√≤n c√≥ th√™m ƒë·ªông l·ª±c ƒë·ªÉ g·∫Øn b√≥ d√†i l√¢u
            c√πng th∆∞∆°ng hi·ªáu. ƒê√¢y ch√≠nh l√† l·ªùi cam k·∫øt c·ªßa ch√∫ng t√¥i trong vi·ªác
            kh√¥ng ng·ª´ng n√¢ng cao tr·∫£i nghi·ªám v√† gi√° tr·ªã d√†nh cho kh√°ch h√†ng th√¢n
            thi·∫øt.
          </motion.p>
        </div>
      ),
    },
    {
      id: 7,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <ShinyText
            text="H∆∞·ªõng d·∫´n Loyalty"
            disabled={false}
            speed={3}
            className="text-[50px]"
          />
        </div>
      ),
    },
    {
      id: 8,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/59.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 9,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/60.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 10,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/61.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 11,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/62.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 12,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/63.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 13,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/64.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 14,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/65.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 15,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/66.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 16,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/67.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 17,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <ShinyText
            text="H·ªá th·ªëng t√≠ch ƒëi·ªÉm"
            disabled={false}
            speed={3}
            className="text-[50px]"
          />
        </div>
      ),
    },
    {
      id: 18,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/69.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 19,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/70.png"
            width={1200}
            height={800}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 20,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen">
          <Image
            alt=""
            src="/71.png"
            width={1200}
            height={650}
            className="!object-fill 2xl:w-[1000px] 2xl:h-[550px] 3xl:w-[1200px] 3xl:h-[650px] 1.5xl:w-[1000px] h-[550px]"
          />
        </div>
      ),
    },
    {
      id: 21,
      content: (
        <div className="flex flex-col items-center justify-center gap-6 h-screen relative">
          <Squares
            speed={0.5}
            squareSize={40}
            direction="diagonal" // up, down, left, right, diagonal
            borderColor="#404040"
            hoverFillColor="#a4ff66"
          />
          <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full flex flex-col justify-center items-center gap-y-[20px]">
            <p className="text-center w-[80%]  bg-gradient-to-r from-orange-500 via-indigo-500 to-green-500 text-transparent bg-clip-text text-[70px] font-semibold cursor-default">
              M·ªôt h√†nh tr√¨nh g·∫Øn k·∫øt d√†nh ri√™ng cho doanh nghi·ªáp.
            </p>
            <p className="w-[55%] text-[17px] text-normal font-light text-center font-open">
              ƒê·ªôi ng≈© PicareVN Loyalty xin ch√¢n th√†nh c·∫£m ∆°n s·ª± quan t√¢m v√† ·ªßng
              h·ªô c·ªßa kh√°ch h√†ng. Phi√™n b·∫£n ƒë·∫ßu ti√™n c√≥ th·ªÉ g·∫∑p l·ªói k√≠nh mong qu√Ω
              kh√°ch th√¥ng c·∫£m.
            </p>
            <div className="flex items-center justify-center mt-[20px]">
              <div
                className="relative group"
                onClick={() => setShowModal(false)}
              >
                <button className="relative inline-block p-px font-semibold leading-6 text-white bg-gray-800 shadow-2xl cursor-pointer rounded-xl shadow-zinc-900 transition-transform duration-300 ease-in-out hover:scale-105 active:scale-95">
                  <span className="absolute inset-0 rounded-xl bg-gradient-to-r from-teal-400 via-blue-500 to-purple-500 p-[2px] opacity-0 transition-opacity duration-500 group-hover:opacity-100"></span>

                  <span className="relative z-10 block px-6 py-3 rounded-xl bg-gray-950">
                    <div className="relative z-10 flex items-center space-x-2">
                      <span className="transition-all duration-500 group-hover:translate-x-1 font-open">
                        B·∫Øt ƒë·∫ßu tr·∫£i nghi·ªám
                      </span>
                      <svg
                        className="w-6 h-6 transition-transform duration-500 group-hover:translate-x-1"
                        data-slot="icon"
                        aria-hidden="true"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          clip-rule="evenodd"
                          d="M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z"
                          fill-rule="evenodd"
                        ></path>
                      </svg>
                    </div>
                  </span>
                </button>
              </div>
            </div>
          </div>
        </div>
      ),
    },
  ];

  const observerRef = useRef<IntersectionObserver | null>(null);

  useEffect(() => {
    const options = {
      root: null,
      rootMargin: "0px",
      threshold: 0.5,
    };

    observerRef.current = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          setVisibleSection(Number(entry.target.id));
        }
      });
    }, options);

    const sectionElements = document.querySelectorAll(".section");
    sectionElements.forEach((section) => {
      observerRef.current?.observe(section);
    });

    return () => {
      sectionElements.forEach((section) => {
        observerRef.current?.unobserve(section);
      });
    };
  }, []);
  if (showModal === null || !showModal) return null;
  return (
    <AnimatePresence>
      <motion.div
        className="fixed inset-0 z-[1000] bg-background font-poppins"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
      >
        {/* Scrollable content b√™n trong */}
        <div className=" w-full h-full overflow-y-auto snap-y snap-mandatory">
          {sections.map((section) => (
            <motion.div
              key={section.id}
              id={section.id.toString()}
              className="section snap-start h-screen"
              initial={{ opacity: 0, y: 50 }}
              animate={
                visibleSection === section.id ? { opacity: 1, y: 0 } : {}
              }
              exit={{ opacity: 0, y: -50 }}
              transition={{ duration: 0.5 }}
            >
              {section.content}
            </motion.div>
          ))}
        </div>

        {/* Dock c·ªë ƒë·ªãnh */}
        {visibleSection !== 1 && (
          <div className="fixed bottom-4 left-1/2 -translate-x-1/2 z-50">
            <Dock
              items={items}
              panelHeight={68}
              baseItemSize={50}
              magnification={70}
            />
          </div>
        )}
      </motion.div>
    </AnimatePresence>
  );
}

function ScrollDown() {
  return (
    <div className="flex items-center absolute top-0 3xl:bottom-[-500px] 2xl:bottom-[-400px] gap-x-[20px]">
      <FaArrowDown className="text-[36px] text-neutral-600 text-opacity-30" />
      <p className="text-[30px] text-neutral-600 text-opacity-30">K√©o xu·ªëng</p>
    </div>
  );
}
